{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x508726EC7884225CE231814aB2C42793b6B93A46",
      "txHash": "0x446c9dfea387f883cacc70c0c0b93f4a8e6ebb7cfa2005bf769070c97fccb566",
      "kind": "uups"
    },
    {
      "address": "0x2F6cddD6d22B0FA917CC81166D26B4b9C9834f9A",
      "txHash": "0xff05b35c5434901201a0c7e95a0cf0ddcbe5942fb695c8e9da7168d53b9a6d39",
      "kind": "uups"
    }
  ],
  "impls": {
    "616af5af12ea1d4b0e4c29a4f88c135fcea864239041f3aba964a17d367c5e58": {
      "address": "0x51cFc704574e7D90f47C2719179593160a4183A9",
      "txHash": "0xd6e03c794e0f70d1a6cee16e860a40e7fd6f233b10a22696402a9c1d512987cd",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(FilledOrder)751_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)715_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FilledOrder)751_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)685_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)715_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)764_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:45",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "14"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "616e7570381f796bd4f4967d6273573dde4df5ca040abcd636df3e36b3d183eb": {
      "address": "0x22d193bA4bCA08414dE06B754556D77c0976ef24",
      "txHash": "0x9bb00db0019a72f90c99f9d3d1eded3e84e7acf7637b00cdd14bdf617fe61bcb",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(FilledOrder)753_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)766_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)753_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)717_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FilledOrder)753_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)687_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)717_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)753_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)766_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)717_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)766_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)717_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)753_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)766_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d6c58d5b11822e417d68e87bf040924454cc23c6a7e47df78a0b50ca42ca8e16": {
      "address": "0x189c2B560545d22398d695Fe7D18a87EB2242A2a",
      "txHash": "0x8f8473846bc6a762f3332c2dbd7f3fa4b314434df58c33251fd4f0abbd1e7d09",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)1464_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)1438_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)1451_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)592": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)869": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)1464_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1438_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)1402_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)1464_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)1438_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)77_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)1372_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)592",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)869",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)1402_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1438_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)1451_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)1464_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)203_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)1402_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)1451_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)592",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)869",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)1402_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1438_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)1451_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)1464_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e5ec06df30e70a6b02b1f7d3ca3f45a1d32dd7dfe5975c022ea51d929bc3a9c3": {
      "address": "0x29313b5e51e3E36018F83FD152Db04Ce343753d7",
      "txHash": "0xebc4419d9d1fbfab057d086cab97b27fee5caaecc9ba174223dfe5e9a23bf3c5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)814_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)776_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_enum(WinPosition)718": {
            "label": "enum StVolHourly.WinPosition",
            "members": [
              "Over",
              "Under",
              "Tie",
              "Invalid"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)740_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.SettlementResult)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)814_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)776_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)705_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)740_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "settlementResults",
                "type": "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)",
                "offset": 0,
                "slot": "19"
              }
            ],
            "numberOfBytes": "640"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)740_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(SettlementResult)788_storage": {
            "label": "struct StVolHourly.SettlementResult",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winPosition",
                "type": "t_enum(WinPosition)718",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(WithdrawalRequest)801_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)740_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            },
            {
              "contract": "StVolHourly",
              "label": "settlementResults",
              "type": "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)",
              "src": "contracts/StVolHourly.sol:65",
              "offset": 0,
              "slot": "19"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
